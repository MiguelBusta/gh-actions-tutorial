# This workflow will build a Python app with AWS lambdas

name: Python with AWS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Flask
          pip install pylint
      - name: Lint with pylint
        run: |
          pylint project.py

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Flask
          pip install pytest
      - name: Testing with pytest
        run: |
          pytest

  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Zip Python file
        run: |
          zip -r my_python_project.zip project.py test_project.py

  dockerize:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build Docker image
        run: |
          docker build -t python-project:1.0.0 -f Dockerfile .
      - name: Push Docker image
        run: |
          docker run python-project:1.0.0 mik2001/python-project:1.0.0
          docker push mik2001/python-project:1.0.0
